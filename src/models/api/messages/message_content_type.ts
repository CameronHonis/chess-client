export enum MessageContentType {
    // inbound
    MATCH_UPDATED = "MATCH_UPDATED",
    CHALLENGE_UPDATED = "CHALLENGE_UPDATED",
    MOVE_FAILED = "MOVE_FAILED",
    SUBSCRIBE_REQUEST_GRANTED = "SUBSCRIBE_REQUEST_GRANTED",
    SUBSCRIBE_REQUEST_DENIED = "SUBSCRIBE_REQUEST_DENIED",
    UPGRADE_AUTH_GRANTED = "UPGRADE_AUTH_GRANTED",
    UPGRADE_AUTH_DENIED = "UPGRADE_AUTH_DENIED",
    CHALLENGE_REQUEST_FAILED = "CHALLENGE_REQUEST_FAILED",
    MATCH_CREATION_FAILED = "MATCH_CREATION_FAILED",

    // outbound
    EMPTY = "EMPTY",
    ECHO = "ECHO",
    AUTH = "AUTH",
    JOIN_MATCHMAKING = "JOIN_MATCHMAKING",
    LEAVE_MATCHMAKING = "LEAVE_MATCHMAKING",
    MOVE = "MOVE",
    RESIGN_MATCH = "RESIGN_MATCH",
    SUBSCRIBE_REQUEST = "SUBSCRIBE_REQUEST",
    UPGRADE_AUTH_REQUEST = "UPGRADE_AUTH_REQUEST",
    CHALLENGE_REQUEST = "CHALLENGE_REQUEST",
    ACCEPT_CHALLENGE = "ACCEPT_CHALLENGE",
    DECLINE_CHALLENGE = "DECLINE_CHALLENGE",
    REVOKE_CHALLENGE = "REVOKE_CHALLENGE",
}

export function isMessageContentType(name: string): name is MessageContentType {
    return Object.values(MessageContentType).includes(name as MessageContentType);
}